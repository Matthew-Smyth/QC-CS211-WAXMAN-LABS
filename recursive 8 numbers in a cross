#include <iostream>
#include <cmath>
using namespace std;

bool ok(int q[], int c) {
   // c is the box index, q[c] is the number to fill in the box
   static int checkList[8][5] = {
      // write this together...
      {-1}, // box 0's checklist
      {0, -1},   // box 1's checklist
      {1, -1},
      {0, 1, 2, -1},
      {1, 2, 3, -1},
      {0, 3, 4, -1},
      {3, 4, 5, -1},
      {2, 4, 6, -1}
   };
 
   // Test 1: Similar to row test in 8 Queens
   // If the number you are writing in box c has already been written to previous boxes
   for(int i=0; i<c; i++) {
      //if(...) return false;
      if(q[c] == q[i])
      return false;
   }
 
   // Test 2: 
   // If the number you are writing in box c differs by 1 
   // from any of the numbers in box c's checklist before -1
   for(int i=0; checkList[c][i]!=-1; i++) {
      //if(...) return false;
      if(abs(q[c] - q[checkList[c][i]]) == 1)
      return false;
   }
   return true;
}

void print(int q[]){
   static int solution = 1;
   cout << "solution " << solution++ <<endl;
   cout << " " << " " << q[1] << q[2] << endl;
   cout << " " << q[0] << q[3] << q[4] << q[7] << endl;
   cout << " " << " " << q[5] << q[6] << endl;
   cout << "----------------" << endl;
}

void next(int q[], int c){
	if(c == 8) print(q); // pass the last column, so you find a solution (base case, returns)
    else {
        for(q[c] = 1; q[c] < 9; q[c]++) 	// next row
            if(ok(q, c)) next(q, c+1) ;		// next column
    }
}

int main(){
	int q[8];
	q[0] = 1;
	next(q, 0);
	return 0;
}
